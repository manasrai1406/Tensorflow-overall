# -*- coding: utf-8 -*-
"""Regression-with-Tensorflow.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vb7cKBqyfHDol1Qqp2o3et_UziixU97C
"""

import tensorflow as tf
print(tf.__version__)

#creating data to view and fit
import numpy as np
import matplotlib.pyplot as plt
x=np.array([-7.0,-4.0,-1.0,2.0,5.0,8.0,11.0,14.0])

#creating labels
y=np.array([3.0, 6.0, 9.0, 12.0, 15.0, 18.0, 21.0, 24.0])
plt.scatter(x,y)

#input and output Tensor
house_info = tf.constant(["bedroom","bathroom","garage"])
house_price = tf.constant([939700])
house_info,house_price

x=tf.constant(x)
y-tf.constant(y)

#steps in modelling with Tensorflow
# 1. defining the model like defining the input,output and hidden layers
# 2. compiling a model : Loss function and optimizer and evaluation metrics
# 3. Fitting a model

tf.random.set_seed(42)
#1
model = tf.keras.Sequential([
    tf.keras.layers.Dense(1)
])

#2
model.compile(loss=tf.keras.losses.mae,
              optimizer=tf.keras.optimizers.SGD(),
              metrics = ["mae"]
              )

#3
model.fit(tf.expand_dims(x, axis=-1), y, epochs=5)

model.predict([17.0])



